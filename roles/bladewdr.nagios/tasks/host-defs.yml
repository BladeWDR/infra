#### Automatically create Nagios host configuration file based on Ansible inventory.
#### Automatically delete objects that have been removed from Ansible inventory.
---
- name: Copy host templates to Nagios host.
  ansible.builtin.copy:
    src: "{{ role_path }}/files/host_templates/{{ item }}.cfg"
    dest: "{{ nagios_obj_dir }}/services/"
    owner: nagios
    group: nagios
    mode: '0664'
  when: "nagios_server_fqdn == inventory_hostname"
  with_items: "{{ nagios_host_templates }}"
  notify: Restart nagios

- name: Copy hostgroups definition to Nagios host.
  ansible.builtin.copy:
    src: "{{ role_path }}/files/host_templates/hostgroups.cfg"
    dest: "{{ nagios_obj_dir }}/hostgroups/"
    owner: nagios
    group: nagios
    mode: '0664'
  notify: Restart nagios

- name: Create host definition and send to Nagios server.
  ansible.builtin.template:
    src: nagios.j2
    dest: "{{ nagios_cfg_dir }}/{{ inventory_hostname }}.cfg"
    owner: nagios
    group: nagios
    mode: u=rw,g=rw,o=r
  delegate_to: "{{ nagios_server_fqdn }}"
  when: 'nagios_server_fqdn not in inventory_hostname'
  notify: Restart nagios

- name: Build list of existing files in my objects folder.
  ansible.builtin.shell: "ls {{ nagios_cfg_dir }} | sed -e 's/\\.cfg$//'"
  register: files
  changed_when: false

- name: "Find the servers that have been removed from inventory."
  ansible.builtin.set_fact:
    orphans: "{{ files.stdout_lines | difference(groups['servers']) }}"

- name: Remove orphan nagios config files.
  ansible.builtin.file:
    name: "{{ nagios_cfg_dir }}/{{ item }}.cfg"
    state: absent
  with_items: "{{ orphans }}"
  notify: Restart nagios
