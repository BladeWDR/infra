---

- name: Populate service facts.
  ansible.builtin.service_facts:

- name: Set variables based on the host architecture.
  ansible.builtin.set_fact:
    pihole_ftl_binary_name: "pihole-FTL-{{ pihole_architecture_mapping[ansible_facts.architecture] }}"

- name: Set download URL for FTL.
  ansible.builtin.set_fact:
    pihole_ftl_download_url: "https://ftl.pi-hole.net/{{ pihole_ftl_branch }}/{{ pihole_ftl_binary_name }}"

- name: Check if /etc/pihole already exists.
  ansible.builtin.stat:
    path: /etc/pihole
  register: pihole_dir_exists

- name: Create the pihole group.
  ansible.builtin.group:
    name: pihole
    state: present

- name: Create the pihole user.
  ansible.builtin.user:
    name: pihole
    groups: pihole
    shell: /usr/sbin/nologin
    append: true

- name: OS-specific tasks.
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: Include Pi-hole installation tasks.
  ansible.builtin.include_tasks: Pihole-install.yml
  when: not pihole_dir_exists.stat.exists

- name: Configure adlists.
  ansible.builtin.lineinfile:
    path: "{{ pihole_adlist_file }}"
    state: present
    line: "{{ item }}"
    create: true
    owner: root
    group: root
    mode: '0644'
  loop: "{{ pihole_adlists }}"
  notify:
    - update-gravity
    - pihole-FTL

- name: Make sure pihole.toml has been created.
  ansible.builtin.stat:
    path: "{{ pihole_v6_config_path }}"
  register: pihole_config

- name: Set Pi-hole DNS upstreams.
  when: pihole_dir_exists.stat.exists
  block:
    - name: Check the current Pi-hole upstream DNS servers.
      ansible.builtin.shell: |
        pihole-FTL --config -q "dns.upstreams"
      register: pihole_ftl_stdout
      changed_when: false

    - name: Parse current upstreams into a list.
      ansible.builtin.set_fact:
        current_pihole_upstreams: "{{ pihole_ftl_stdout.stdout | regex_findall('[0-9.]+') }}"

    - name: Normalize desired upstreams.
      ansible.builtin.set_fact:
        desired_pihole_upstreams: "{{ pihole_upstream_dns_servers | sort }}"

    - name: Set Pi-hole DNS upstreams if needed.
      ansible.builtin.shell: |
        pihole-FTL --config dns.upstreams '{{ pihole_upstream_dns_servers | to_json }}'
      when: (current_pihole_upstreams | sort) != (desired_pihole_upstreams)

- name: Disable systemd‑resolved DNSStubListener (free port 53 for FTL).
  when:
    - "'systemd-resolved.service' in ansible_facts.services"
    - ansible_facts.services['systemd-resolved.service'].state == 'running'
  block:
    - name: Ensure drop‑in directory for systemd-resolved dexists.
      ansible.builtin.file:
        path: /etc/systemd/resolved.conf.d
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Install 90‑pi‑hole‑disable‑stub‑listener.conf.
      ansible.builtin.copy:
        dest: /etc/systemd/resolved.conf.d/90-pi-hole-disable-stub-listener.conf
        content: |
          [Resolve]
          DNSStubListener=no
        owner: root
        group: root
        mode: '0644'
      notify:
        - reload systemd‑resolved
        - pihole-FTL

- name: Make sure that pihole-FTL is started and enabled.
  ansible.builtin.service:
    name: pihole-FTL
    state: started
    enabled: true
